(window.webpackJsonp=window.webpackJsonp||[]).push([[84],{644:function(t,s,a){"use strict";a.r(s);var n=a(62),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"面试提问"}},[t._v("面试提问")]),t._v(" "),a("h2",{attrs:{id:"javascript"}},[t._v("JavaScript")]),t._v(" "),a("h3",{attrs:{id:"javascript组成"}},[t._v("JavaScript组成")]),t._v(" "),a("ul",[a("li",[t._v("ECMAScript（JavaScript的标准化规范）")]),t._v(" "),a("li",[t._v("DOM（文档对象模型）")]),t._v(" "),a("li",[t._v("BOM（浏览器对象模型）")])]),t._v(" "),a("h3",{attrs:{id:"数据类型"}},[t._v("数据类型")]),t._v(" "),a("ul",[a("li",[t._v("Undefined")]),t._v(" "),a("li",[t._v("Null")]),t._v(" "),a("li",[t._v("Boolean")]),t._v(" "),a("li",[t._v("Number")]),t._v(" "),a("li",[t._v("String")]),t._v(" "),a("li",[t._v("Symbol")]),t._v(" "),a("li",[t._v("Object")])]),t._v(" "),a("h3",{attrs:{id:"javascript垃圾回收机制"}},[t._v("JavaScript垃圾回收机制")]),t._v(" "),a("p",[t._v("自动内存管理实现内存分配和闲置资源回收，周期性的检测不再使用的变量，然后释放它占用的内存\n某块内存是否还有用，属于“不可判定的”问题（内存如果释放不了 就造成了内存泄露）")]),t._v(" "),a("h3",{attrs:{id:"会导致内存泄露的几种情况"}},[t._v("会导致内存泄露的几种情况")]),t._v(" "),a("ul",[a("li",[t._v("意外声明全局变量")]),t._v(" "),a("li",[t._v("定时器")]),t._v(" "),a("li",[t._v("闭包")])]),t._v(" "),a("h3",{attrs:{id:"避免内存泄露"}},[t._v("避免内存泄露")]),t._v(" "),a("ul",[a("li",[t._v("及时解除引用")]),t._v(" "),a("li",[t._v("const 和 let 声明提升性能")])]),t._v(" "),a("h3",{attrs:{id:"数组的栈方法"}},[t._v("数组的栈方法")]),t._v(" "),a("p",[t._v("push pop")]),t._v(" "),a("h3",{attrs:{id:"数组的队列方法"}},[t._v("数组的队列方法")]),t._v(" "),a("p",[t._v("push/shift 和 unshift/pop（反向队列）")]),t._v(" "),a("h3",{attrs:{id:"继承的理解"}},[t._v("继承的理解")]),t._v(" "),a("p",[t._v("继承可以使得子类具有父类的属性和方法，并可以追加和修改对应的属性和方法")]),t._v(" "),a("h3",{attrs:{id:"原型链最终指向（继承）哪个原型"}},[t._v("原型链最终指向（继承）哪个原型")]),t._v(" "),a("p",[t._v("原型链最终的指向是Object的prototype, 而Object中的__proto__是null")]),t._v(" "),a("h3",{attrs:{id:"检测某个对象的原型-instanceof"}},[t._v("检测某个对象的原型(instanceof)")]),t._v(" "),a("p",[t._v("instanceof 运算符用于检测构造函数的 prototype 属性是否出现在某个实例对象的原型链上。\n[] instanceof Array")]),t._v(" "),a("h3",{attrs:{id:"方法的链式调用"}},[t._v("方法的链式调用")]),t._v(" "),a("p",[t._v("执行完对象中的某个方法后 返回该对象 return this")]),t._v(" "),a("h2",{attrs:{id:"es6"}},[t._v("ES6")]),t._v(" "),a("h3",{attrs:{id:"去重"}},[t._v("去重")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("filter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("v"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("index")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("indexOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//[1,2]")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("h3",{attrs:{id:"箭头函数"}},[t._v("箭头函数")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" person "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Kapil'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nperson"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Kapil"')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" person "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Kapil'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("sayName")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nperson"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Output")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br")])]),a("h2",{attrs:{id:"客户端存储"}},[t._v("客户端存储")]),t._v(" "),a("h3",{attrs:{id:"cookie（储存在用户本地终端上的数据）"}},[t._v("cookie（储存在用户本地终端上的数据）")]),t._v(" "),a("p",[t._v("Web Storage 的目的是解决通过客户端存储不需要频繁发送回服务器的数\n据时使用 cookie 的问题")]),t._v(" "),a("h3",{attrs:{id:"sessionstorage-会话级别的存储"}},[t._v("sessionStorage(会话级别的存储)")]),t._v(" "),a("h3",{attrs:{id:"localstorage-持久化的本地存储"}},[t._v("localStorage(持久化的本地存储)")]),t._v(" "),a("h2",{attrs:{id:"vue"}},[t._v("vue")]),t._v(" "),a("h3",{attrs:{id:"_1-观察者模式（订阅-发布），vue2响应式原理"}},[t._v("1.观察者模式（订阅/发布），vue2响应式原理")]),t._v(" "),a("ul",[a("li",[t._v("1.对象响应化：遍历每个key，定义getter、setter")]),t._v(" "),a("li",[t._v("2.数组响应化：覆盖数组原型方法")])]),t._v(" "),a("h3",{attrs:{id:"_2-mvvm-模型-视图-视图模型-，vue数据双向绑定-核心设计模式"}},[t._v("2.MVVM(模型-视图-视图模型)，vue数据双向绑定(核心设计模式)")]),t._v(" "),a("ul",[a("li",[t._v("1.在 MVVM 架构下，View 和 Model 之间并没有直接的联系，而是通过 ViewModel 进行交互，Model 和 ViewModel 之间的交互是双向的， 因此 View 数据的变化会同步到 Model 中，而 Model 数据的变化也会立即反应到 View 上。")])]),t._v(" "),a("h2",{attrs:{id:"网络协议"}},[t._v("网络协议")]),t._v(" "),a("h3",{attrs:{id:"tcp-ip（传输控制协议-网际协议）"}},[t._v("TCP/IP（传输控制协议/网际协议）")]),t._v(" "),a("p",[t._v("TCP/IP传输协议是严格来说是一个四层的体系结构，应用层、传输层、网络层和数据链路层")]),t._v(" "),a("h3",{attrs:{id:"网卡"}},[t._v("网卡")]),t._v(" "),a("ul",[a("li",[t._v("以太网协议规定，接入网络的设备都必须安装网络适配器，即网卡，数据包必须是从一块网卡传送到另一块网卡。而网卡地址就是数据包的发送地址和接收地址，有了MAC地址以后，以太网采用广播形式，把数据包发给该子网内所有主机，子网内每台主机在接收到这个包以后，都会读取首部里的目标MAC地址，然后和自己的MAC地址进行对比，如果相同就做下一步处理，如果不同，就丢弃这个包。")]),t._v(" "),a("li",[t._v("链路层的主要工作就是对电信号进行分组并形成具有特定意义的数据帧，然后以广播的形式通过物理介质发送给接收方")])]),t._v(" "),a("h3",{attrs:{id:"ip协议、路由协议"}},[t._v("IP协议、路由协议")]),t._v(" "),a("ul",[a("li",[t._v("属于TCP/IP中网络层，引入了IP协议，制定了一套新地址，使得我们能够区分两台主机是否同属一个网络，这套地址就是网络地址，也就是所谓的IP地址")]),t._v(" "),a("li",[t._v("网络层的主要工作是定义网络地址、区分网段、子网内MAC寻址、对于不同子网的数据包进行路由")])]),t._v(" "),a("h3",{attrs:{id:"tcp协议（传输控制协议）"}},[t._v("TCP协议（传输控制协议）")]),t._v(" "),a("ul",[a("li",[t._v("属于TCP/IP中的传输层")]),t._v(" "),a("li",[t._v("传输层的主要工作是定义端口，标识应用程序身份，实现端口到端口的通信，TCP协议可以保证数据传输的可靠性")])]),t._v(" "),a("h3",{attrs:{id:"http协议（超文本传输协议）"}},[t._v("HTTP协议（超文本传输协议）")]),t._v(" "),a("ul",[a("li",[t._v("属于TCP/IP中的应用层")]),t._v(" "),a("li",[t._v("应用层的主要工作就是定义数据格式并按照对应的格式解读数据")])])])}),[],!1,null,null,null);s.default=e.exports}}]);